const fs = require('fs');
const path = require('path');

// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—Ä–µ–Ω–¥–æ–≤ –∏ –∏—Ö –ø–∞–ø–æ–∫
const brands = [
  { name: "Polo Ralph Lauren", folder: "polo-ralph-lauren" },
  { name: "GLD SHOP", folder: "gld-shop" },
  { name: "True Religion", folder: "true-religion" },
  { name: "Purple Brand", folder: "purple-brand" },
  { name: "Denim Tears", folder: "denim-tears" },
  { name: "GLO GANG MERCH", folder: "glo-gang-merch" },
  { name: "SP5DER", folder: "sp5der" },
  { name: "Supreme", folder: "supreme" },
  { name: "A Bathing Ape", folder: "a-bathing-ape" },
  { name: "Yeezy", folder: "yeezy" },
  { name: "Tom Ford", folder: "tom-ford" },
  { name: "Gant", folder: "gant" },
  { name: "Dickies", folder: "dickies" },
  { name: "Carhartt", folder: "carhartt" },
  { name: "Stone Island", folder: "stone-island" },
  { name: "C.P. Company", folder: "cp-company" },
  { name: "Lacoste", folder: "lacoste" },
  { name: "Ecko Unltd", folder: "ecko-unltd" },
  { name: "Diesel", folder: "diesel" },
  { name: "Armani", folder: "armani" },
  { name: "Prada", folder: "prada" },
  { name: "Coach", folder: "coach" }
];

const productsDir = path.join(__dirname, '..', 'public', 'products');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤...\n');

let totalMissing = 0;
let totalFound = 0;

brands.forEach(brand => {
  const brandDir = path.join(productsDir, brand.folder);
  const missingImages = [];
  const foundImages = [];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (image1.jpg - image5.jpg)
  for (let i = 1; i <= 5; i++) {
    const imagePath = path.join(brandDir, `image${i}.jpg`);
    
    if (fs.existsSync(imagePath)) {
      const stats = fs.statSync(imagePath);
      foundImages.push(`image${i}.jpg (${Math.round(stats.size / 1024)}KB)`);
      totalFound++;
    } else {
      missingImages.push(`image${i}.jpg`);
      totalMissing++;
    }
  }
  
  // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±—Ä–µ–Ω–¥–∞
  console.log(`üìÅ ${brand.name} (${brand.folder}/):`);
  
  if (foundImages.length > 0) {
    console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ: ${foundImages.join(', ')}`);
  }
  
  if (missingImages.length > 0) {
    console.log(`   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${missingImages.join(', ')}`);
  }
  
  console.log('');
});

// –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
console.log('üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${totalFound}`);
console.log(`   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${totalMissing}`);
console.log(`   üìà –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è: ${Math.round((totalFound / (totalFound + totalMissing)) * 100)}%`);

if (totalMissing === 0) {
  console.log('\nüéâ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –º–µ—Å—Ç–µ!');
} else {
  console.log(`\n‚ö†Ô∏è  –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å ${totalMissing} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
}
